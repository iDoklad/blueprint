FORMAT: 1A
HOST: app.idoklad.cz/api/

# iDoklad API
iDoklad API je nástroj pro online fakturaci

# Group Úvod

Úvod do API iDokladu, základní informace

# Group Quick Start

Jednoduchý příklad jak získat seznam faktur a vytvořit fakturu

# Group Autentifikace

Informace, které se tykaji přihlašování

# Group Paging
Informace, které se tykaji strankování api

# Group Agenda
Agenda related resources of the **iDoklad API**

## Agendas Collection [/agendas]
### List of all Agendas [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park", "invoice" : {"id":51}
        }, {
          "id": 2, "title": "Pick-up posters from post-office", "invoice" : {"id":51}
          
## Agenda [/agendas/{id}]
### Get an Agenda [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park", "invoice" : {"id":51}
        }, {
          "id": 2, "title": "Pick-up posters from post-office", "invoice" : {"id":51}
        }]       
        
### Update an Agenda [PUT]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park", "invoice" : {"id":51}
        }, {
          "id": 2, "title": "Pick-up posters from post-office", "invoice" : {"id":51}
        }]        
        
        
## Contact for Agenda [/agendas/{agendaid}/contact]
### Get Contact information for Agenda [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park", "invoice" : {"id":51}
        }, {
          "id": 2, "title": "Pick-up posters from post-office", "invoice" : {"id":51}
         ]
         
### Updage Contact for Agenda [PUT]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park", "invoice" : {"id":51}
        }, {
          "id": 2, "title": "Pick-up posters from post-office", "invoice" : {"id":51}
        }]   

# Group IssuedInvoices
IssuedInvoices related resources of the **iDoklad API**

## IssuedInvoices Collection [/issuedinvoices]
### List all IssuedInvoices [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park"
        }, {
          "id": 2, "title": "Pick-up posters from post-office"
        }]

### Create a IssuedInvoices [POST]
+ Request (application/json)

        { "title": "Buy cheese and bread for breakfast." }

+ Response 201 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }

## IssuedInvoice [/issuedinvoices/{id}]
A single Issuedinvoice object

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Note to perform action with. Has example value.

### Retrieve a IssuedInvoice [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "title": "Pick-up posters from post-office" }
            

### Remove a IssuedInvoice [DELETE]
+ Response 204            
            
## IssuedInvoiceWrite [/issuedinvoiceswrite/{id}]
A single IssuedinvoiceWrite object

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Note to perform action with. Has example value.

### Update a IssuedInvoice [PUT]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "title": "Pick-up posters from post-office" }   
            
### Add a IssuedInvoice [POST]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "title": "Pick-up posters from post-office" }             

## MyDocumentAddress [/issuedinvoice/{id}/mydocumentaddress]
Vrati fakturacni udaje odberatele pro fakturu.

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the IssuedInvoice releated to DocumentAddress

### Retrieve a Note [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "title": "Pick-up posters from post-office" }

### Remove a pricelistitems [PUT]
+ Response 204

## PurchaserDocumentAddress [/issuedinvoice/{id}/purchaserdocumentaddress]
Vrati fakturacni udaje odberatele pro fakturu.

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the IssuedInvoice releated to DocumentAddress

### Retrieve a Note [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "title": "Pick-up posters from post-office" }

### Remove a pricelistitems [PUT]
+ Response 204

# Group Contacts
Contacts related resources of the **iDoklad API**

## Contacts Collection [/contacts]
### List all Contact items [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park", "invoice" : {"id":51}
        }, {
          "id": 2, "title": "Pick-up posters from post-office", "invoice" : {"id":51}
        }]

### Create a Contact [POST]
+ Request (application/json)

        { "title": "Buy cheese and bread for breakfast." }

+ Response 201 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }
        
## Contact [/contacts/{id}]
### Get a Contact [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park", "invoice" : {"id":51}
        }, {
          "id": 2, "title": "Pick-up posters from post-office", "invoice" : {"id":51}
        }]

### Update a Contact [PUT]
+ Request (application/json)

        { "title": "Buy cheese and bread for breakfast." }

+ Response 200 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }     
        
## BankAccounts for Contacts [/contacts/{id}/bankaccounts]
### Get Bank Account for Contact [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park", "invoice" : {"id":51}
        }, {
          "id": 2, "title": "Pick-up posters from post-office", "invoice" : {"id":51}
        }]

### Add a Bank Account for Contact [POST]
+ Request (application/json)

        { "title": "Buy cheese and bread for breakfast." }

+ Response 201 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }        
        



# Group PriceListItems
Price items related resources of the **iDoklad API**

## PriceListItems Collection [/pricelistitems]
### List all Price list items [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park", "invoice" : {"id":51}
        }, {
          "id": 2, "title": "Pick-up posters from post-office", "invoice" : {"id":51}
        }]

### Create a PriceList [POST]
+ Request (application/json)

        { "title": "Buy cheese and bread for breakfast." }

+ Response 201 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }
        
## PriceListItem [/pricelistitems/{id}]
### Get a price list item [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park", "invoice" : {"id":51}
        }, {
          "id": 2, "title": "Pick-up posters from post-office", "invoice" : {"id":51}
        }]

### Update a PriceList [PUT]
+ Request (application/json)

        { "title": "Buy cheese and bread for breakfast." }

+ Response 200 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }  
        
### Delete a PriceList [DELETE]
+ Request (application/json)

        { "title": "Buy cheese and bread for breakfast." }

+ Response 200
